--新建用户
-登录
mysql -u root -p
Quye123!@#

-创建用户并授权
create user 'wlxcx' identified by 'wlxcxQWE123!@#';
grant all on `wlxcx`.* to 'wlxcx';

create user 'medical-record'@'%' identified by 'medical-recordQWE456$%^';
grant all on `medical-record`.* to 'medical-record'@'%';

grant all on *.* to 'wl-reagent';

exit

-查看用户权限
select * from mysql.user
show grants for root

--查询插入
insert into tb_user_copy1(id, username, password, create_time)
select id, username, password, create_time from tb_user
where id > 80

--关联更新
update goods a
left join category b
on a.category_id = b.id
set a.name = '苹果2'
where a.id = 2 and b.name = '水果'

--关联删除
delete a
from goods a
left join category b
on a.category_id = b.id
where a.id = 2 and b.name = '水果'

--null设置默认值
select ifnull(null, 0)
select coalesce(null, 0)

--保留小数
//https://blog.csdn.net/newer_xiaohui/article/details/130883501
select round(100.3465, 2), round(100, 2), round(0.6, 2), round(114.6, -1) //四舍五入
select truncate(100.3465, 2), truncate(100, 2), truncate(0.6, 2), truncate(114.6, -1) //舍
select cell(32.1) //向上取整
select floor(32.1) //向下取整

--数据类型转换
select cast(10 as char)
select cast(10 as char(1))
select cast('010' as signed)
select convert('010', signed)

字符，可带参数：char()
日期：date
时间：time
日期时间：datetime
浮点数：decimal
有符号整数：signed
无符号整数：unsigned

--数字转字符串
select concat(10.010, '')

--字符串转数字
select '010.010' + 0

--时间转字符串
select date_format(now(), '%Y-%m-%d %H:%i:%s')
select date_format(now(), '%Y-%c-%e %h:%i:%s')
select date_format(now(6), '%Y-%m-%d %T.%f')

--字符串转时间
select str_to_date('2018-01-18 18:18:18', '%Y-%m-%d %H:%i:%s')

--时间转时间戳
select unix_timestamp(now())
--时间戳转时间
select from_unixtime(1539238971)

--年月日时分秒格式化成年月日
select date(now())

select now() //年月日时分秒
select now(6) //年月日时分秒毫秒
select curdate() //年月日
select curtime() //时分秒
select curtime(6) //时分秒毫秒

select current_date() //年月日
select current_time() //时分秒
select current_time(6) //时分秒毫秒
select current_timestamp() //年月日时分秒
select current_timestamp(6) //年月日时分秒毫秒

--一年当中的第几天
select dayofyear(curdate())
--一月当中的第几天
select dayofmonth(curdate())
--一周当中的第几天（周日第一天）
select dayofweek(curdate())
--一周当中的索引位置（0=周一）
select weekday(curdate())

--几几年
select year(now())
--几月
select month(now())
--几周
select week(now())
--几号
select day(now())
--几时
select hour(now())
--几分
select minute(now())
--几秒
select second(now())

--时间加减
select date_add(curdate(), interval -1 day)
select date_sub(curdate(), interval -1 year)

--当天0点
select curdate()
--昨天0点
select date_add(curdate(), interval -1 day)
--当周周一0点
select date_add(curdate(), interval -weekday(curdate()) day)
--当月1号0点
select date_add(curdate(), interval -day(curdate()) + 1 day)
--上月1号0点
select date_add(curdate() - day(curdate()) + 1, interval -1 month)
--下月1号0点
select date_add(curdate() - day(curdate()) + 1, interval 1 month)
--当月最后一天0点
select last_day(curdate())
--当年1月1号0点
select date_add(curdate(), interval -dayofyear(curdate()) + 1 day)
--去年1月1号0点
select date_add(curdate() - dayofyear(curdate()) + 1, interval -1 year)

--比较时分秒
select timediff('1993-07-22 08:08:08', '1993-07-20 06:06:06')
--比较天数
select datediff('1993-07-22 06:06:06', '1993-07-20 08:08:08')
--比较时间
select timestampdiff(year, '1993-07-22 08:08:08', '1993-07-20 06:06:06')
select timestampdiff(month, '1993-07-22 08:08:08', '1993-07-20 06:06:06')
select timestampdiff(day, '1993-07-22 08:08:08', '1993-07-20 06:06:06')
select timestampdiff(hour, '1993-07-22 08:08:08', '1993-07-20 06:06:06')
select timestampdiff(minute, '1993-07-22 08:08:08', '1993-07-20 06:06:06')
select timestampdiff(second, '1993-07-22 08:08:08', '1993-07-20 06:06:06')

--根据经纬度算距离
select st_distance_sphere(point(longitude, latitude), point(#{longitude}, #{latitude})) distance
select round(st_distance(point(null, null), point(null, null)) * 111195, 1) distance
select round(6378.138 * 2 * asin(sqrt(pow(sin((#{latitude} * pi() / 180 - latitude * pi() / 180) / 2), 2) + cos(#{latitude} * pi() / 180) * cos(latitude * pi() / 180) * pow(sin((#{longitude} * pi() / 180 - longitude * pi() / 180) / 2), 2))) * 1000) distance

--随机数
select floor(rand() * 1000000)

--字符串长度
varchar(int)类型，int是字符数，而不是字节数
--length()一个汉字三个字符，char_length()一个汉字一个字符
select length('吴彬')
select char_length('吴彬')

--判断字符串是否包含空格
select * from yw_preferential_item
where type_range2 like '% %'

select * from yw_preferential_item
where type_range2 regexp ' '

select * from yw_preferential_item
where length(type_range2) != length(replace(type_range2, ' ', ''))

--字符串拼接
select concat('%', 'wubin', '%')

--字符串截取
select substring('db098ee7e5bcdf5efb266be68be83d33', 9, 16)

--字符串大小写
select upper('abc')
select lower('ABC')

--字符串包含
select locate('bc', 'abcdefg')
select instr('abcdefg', 'bc')
select position('bc' in 'abcdefg')
select find_in_set('b', 'a,b,c,d')

--取顺序第一个逗号前面的字符串
select substring_index('123,456,789,0', ',', 1) //123
--取顺序第二个逗号前面的字符串
select substring_index('123,456,789,0', ',', 2) //123,456
--取倒序第一个逗号后面的字符串
select substring_index('123,456,789,0', ',', -1) //0

select substring_index(substring_index('123,456,789,0', ',', 2), ',', -1) //456

--根据某个字段把一条记录分成多条
select substring_index(substring_index('82,83,84,85,86', ',', auto_incre_id), ',', -1) as id from 
(
select 1 auto_incre_id
union all select 2 auto_incre_id
union all select 3 auto_incre_id
) a
where auto_incre_id <= (length('82,83,84,85,86') - length(replace('82,83,84,85,86', ',', '')) + 1)

--group_concat一般与group by同时使用
select group_concat(id) from wubin
select name,group_concat(id) from wubin group by name

--any_value()

--
where条件!=过滤了null
count()里面，=过滤了null

--count()
count(*)，count(1)会统计null的行
count(列名)不会统计null的行

count(1)：每一行的值都是1，每一行都会统计
count(null)：每一行的值都是null，每一行都不会统计，等于0

count碰到null时不统计

-count()函数有条件
select count(charge_type = 2 or null) from chargerecord
charge_type不等于2时结果是false，(false or null)结果是null

select count(case when charge_type = 2 then charge_type end) from chargerecord

--分组求最大值，并取最大值所在的行
select a.* from wubin a
left join wubin b
on a.name = b.name and a.amount < b.amount
where b.name is null

select b.* from
(
select name, max(amount) amount
from wubin
group by name
) a
left join wubin b
on a.amount = b.amount and a.name = b.name

select * from wubin
where amount in (
select max(amount) from wubin
group by name
)

select * from wubin a
where amount = (
select max(amount) from wubin b
where a.name = b.name
)

--自连接
select create_time, count(*) c,
(
select count(*) 
from wubin b 
where b.create_time <= a.create_time
) ltec
from wubin a
group by create_time

--分组排序
select a.*, @rownum := if(@group = domain1, @rownum + 1, 1) as rownum,
@group := domain1
from
(
select domain1, domain2, count(*) as num from
medical_device_domain
where province = '浙江省' and domain is not null and domain <> ''
and domain1 is not null and domain1 <> '' and domain1 not like '%其他%'
and domain2 is not null and domain2 <> ''
group by domain1, domain2
order by domain1, num desc
) a, (select @rownum := 0, @group := '') b

--前10条记录中，每隔5条取1条
select * from
(
select *, @rownum := @rownum + 1 as rowno from tb_user, (select @rownum := 0) t
order by id desc limit 0, 10
) a 
where mod(a.rowno, 5) = 1

--
select
@num := @num + 1,
date_format(adddate(curdate(), interval @num - 30 day), '%Y-%m-%d') as date 
from
yw_person_info, (select @num := 0) t 
where
adddate(curdate(), interval @num - 30 day) < curdate()

--
start transaction;
set @num := 100000;
update yw_person_info set password = (@num := @num + 1);
commit;

--创建临时表
create temporary table if not exists incre_table (auto_incre_id int)


--
show variables;
show global variables;
show session variables;

show variables like '%sql_mode%';
show global variables like '%sql_mode%';
show session variables like '%sql_mode%';

select @@sql_mode;
select @@global.sql_mode;
select @@session.sql_mode;

set sql_mode='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
set global sql_mode='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
set session sql_mode='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';

-是否区分表名大小写
show variables like '%lower%'

-版本
show variables like '%version%'

-最大连接数
show variables like '%max_connection%'


--1040 - Too many connections
show processlist
kill 12345
show variables like '%max_connection%'
show status like 'Threads%'
show status like 'Max_used_connections'

-空闲时间在600秒以上
select concat('kill ', id, ';') from information_schema.`processlist` 
where command = 'Sleep' and time > 600

-某个用户发起的
select concat('kill ', id, ';') from information_schema.`processlist`
where user = 'sxzyy-huimin'


--锁
https://www.cnblogs.com/wodebudong/articles/7976474.html
条件字段没有索引，update锁表
条件字段有索引，update锁行


--索引（大表加索引）
-创建索引
create index index_username on user(username)
alter table user add index index_username (username)
create index index_user on user(username, create_time, age)

-删除索引
drop index index_username on user
alter table user drop index index_username

-索引字段名不要是关键字
-结果超过一半，索引无效

-is null，索引有效；is not null，索引无效
explain select * from user where username is null
explain select * from user where username is not null

-in 小于等于两个，索引有效；大于两个，索引无效
explain select * from user where username in ('tom', 'mary')
explain select * from user where username in ('tom', 'mary', 'wubin')

-like 以%开头，索引无效；不以%开头，索引有效
explain select * from user where username like '%t%'
explain select * from user where username like 't%'

-OR语句
explain select * from user where age = 23 or age = 24 //结果<=1，索引有效
explain select * from user where age < 12 or age > 12 //结果<=1，索引有效
explain select * from user where username = 'tom' or username = 'jack' //结果<=1，索引有效
explain select * from user where create_time = '2019-12-09 15:33:00' or create_time = '2019-12-09 15:33:01' //结果<=1，索引有效
explain select * from user where create_time < '2019-12-09 10:07:08' or create_time > '2020-02-04 10:47:50' //结果<=1，索引有效
explain select * from user where username = 'wubin' or age = 54 //每个字段结果<=1，索引有效
explain select * from user where username = 'wubin' or realname = 'wer' //每个字段结果<=1，索引有效

-<>，!=主键索引有效，非主键索引结果<=1，索引有效
explain select * from user where id != 12
explain select * from user where age != 12 //结果<=1，索引有效

-数据类型隐式转化（不包括时间类型）
explain select * from user where username = '123'
explain select * from user where username = 123 //索引无效
explain select * from user where username = cast(123 as char)

explain select * from user where create_time = '2019-12-09 14:42:40' //索引有效
explain select * from user where create_time < '2019-12-09 14:42:40' //索引有效
explain select * from user where create_time < cast('2019-12-09 14:42:40' as datetime) //索引有效
explain select * from user where create_time < str_to_date('2019-12-09 14:42:40', '%Y-%m-%d %H:%i:%s') //索引有效

-对索引字段进行计算，索引无效
explain select * from user where age - 1 = 1 //索引无效
explain select * from user where age = 23 + 1 //索引有效

-对索引字段使用函数，索引无效
explain select * from user where length(username) = 8

-组合索引 最佳左前缀法则
explain select * from user where username = 'tom'
explain select * from user where create_time = '2019-12-09 14:42:40' //索引无效
explain select * from user where age = 12 //索引无效
explain select * from user where username = 'tom' and create_time = '2019-12-09 14:42:40'
explain select * from user where create_time = '2019-12-09 14:42:40' and username = 'tom'
explain select * from user where username = 'tom' and age = 12
explain select * from user where create_time = '2019-12-09 14:42:40' and age = 12 //索引无效
explain select * from user where username = 'tom' and create_time = '2019-12-09 14:42:40' and age = 12
explain select * from user where create_time = '2019-12-09 14:42:40' and age = 12 and username = 'tom'
explain select * from user where username = 'tom' and create_time < '2019-12-09 14:42:40' and age = 12 //范围条件后的索引失效


--开启binlog
[mysqld]
server_id = 1
log_bin = mysql-bin
binlog_format = Row
expire_logs_days = 30

show variables like 'log_bin';

show binlog events in 'mysql-bin.000001';

mysqlbinlog --no-defaults mysql-bin.000001
mysqlbinlog --no-defaults --base64-output=decode-rows -v D:\mysql-5.7.13-winx64\data\mysql-bin.000001
mysqlbinlog --no-defaults --base64-output=decode-rows -v D:\mysql-5.7.13-winx64\data\mysql-bin.000001 > D:/1.sql


--windows安装
-下载
https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.20-winx64.zip

-添加到环境变量Path
如：D:\mysql-8.0.20-winx64\bin

-创建D:\mysql-8.0.20-winx64\my.ini文件
正斜杠 / 或两个反斜杠 \\
[mysqld]
basedir=D:/mysql-8.0.20-winx64
datadir=D:/mysql-8.0.20-winx64/data

-初始化数据目录
mysqld --initialize --console
mysqld --defaults-file=D:\mysql-8.0.20-winx64\my.ini --initialize --console

-启动服务
mysqld --console

-停止服务
mysqladmin -u root shutdown

-安装Windows服务
mysqld --install MySQL --defaults-file=D:\mysql-8.0.20-winx64\my.ini

-启动Windows服务
sc start MySQL
或
net start MySQL

-停止Windows服务
sc stop MySQL
或
net stop MySQL

-删除Windows服务
sc delete mysql
或
mysqld --remove

-登录
mysql -u root -p

-修改密码
alter user 'root'@'localhost' identified by 'root';
caching_sha2_password
mysql_native_password

-远程授权
rename user 'root'@'localhost' to 'root'@'%';
或
show databases;
use mysql;
select host, user, plugin from user;
update user set host = '%' where user='root';
flush privileges;


--centos7 mysql5.7 rpm安装
-卸载其它mysql
rpm -qa | grep mariadb
yum list installed | grep mariadb
rpm -e --nodeps mariadb*
yum remove mariadb*

rpm -qa | grep mysql
yum list installed | grep mysql

libaio.x86_64 0:0.3.109-13.el7

-解压
cd /usr/local/project
mkdir mysql-5.7.30
tar xvf mysql-5.7.30-1.el7.x86_64.rpm-bundle.tar -C mysql-5.7.30

-查看
cd mysql-5.7.30
rpm -qpl mysql-community-server-5.7.30-1.el7.x86_64.rpm

-安装
yum install mysql-community-{server,client,common,libs}-* mysql-5.*-
yum install mysql-community-{server,client,common,libs}-*

-启动
systemctl start mysqld
systemctl stop mysqld
systemctl restart mysqld
systemctl reload mysqld
systemctl status mysqld
-是否启动
systemctl is-active mysqld
-开机启动
systemctl enable mysqld
systemctl disable mysqld
-是否开机启动
systemctl is-enabled mysqld

-查看密码
grep 'temporary password' /var/log/mysqld.log

-登录
mysql -u root -p
,wtmkB,)_6pg

-修改密码
alter user 'root'@'localhost' identified by 'qweQWE123!@#';
alter user 'root'@'localhost' identified by 'Hh123456!@#';

-远程授权
rename user 'root'@'localhost' to 'root'@'%';
exit;

-修改配置文件
cat /etc/my.cnf
vi /etc/my.cnf
port=13306
-修改端口需要
vi /etc/selinux/config
SELINUX=disabled
重启服务器

-配置文件
lower_case_table_names=1
sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
character_set_server=utf8mb4
max_connections=1000

--centos7 mysql8 rpm安装
https://repo.mysql.com/
-下载
cd /usr/local
wget https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.20-1.el7.x86_64.rpm-bundle.tar

-解压
mkdir mysql-8.0.20
tar xvf mysql-8.0.20-1.el7.x86_64.rpm-bundle.tar -C mysql-8.0.20

-查看
cd mysql-8.0.20
rpm -qpl mysql-community-server-8.0.20-1.el7.x86_64.rpm

-安装
yum install mysql-community-{server,client,common,libs}-*

-启动
systemctl start mysqld
systemctl stop mysqld
systemctl restart mysqld
systemctl reload mysqld
systemctl status mysqld
-是否启动
systemctl is-active mysqld
-开机启动
systemctl enable mysqld
systemctl disable mysqld
-是否开机启动
systemctl is-enabled mysqld

-查看密码
grep 'temporary password' /var/log/mysqld.log

-登录
mysql -u root -p

-修改密码
alter user 'root'@'localhost' identified by 'root';

-远程授权
rename user 'root'@'localhost' to 'root'@'%';
exit;


--centos8 mysql5.7安装
-依赖
yum search libaio
yum install libaio
yum install libaio.x86_64
yum search libnuma
yum install libnuma

-报错：mysql: error while loading shared libraries: libncurses.so.5: cannot open shared object file: No such file or directory
ln -s libncurses.so.5.6 /lib64/libtinfo.so.5
ln -s libncurses.so.5.6 /lib/libtinfo.so.5

-创建用户和用户组
groupadd mysql
useradd -r -g mysql -s /bin/false mysql

-下载
cd /usr/local
wget https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.30-linux-glibc2.12-x86_64.tar.gz

-解压
mkdir mysql-5.7.30
tar zxvf mysql-5.7.30-linux-glibc2.12-x86_64.tar.gz -C mysql-5.7.30

-
cd mysql-5.7.30
mkdir mysql-files
chown mysql:mysql mysql-files
chmod 750 mysql-files

-初始化数据目录
bin/mysqld --initialize --user=mysql
bin/mysqld --defaults-file=/etc/my.cnf --initialize --user=mysql

-创建默认的SSL和RSA文件，如需要
bin/mysql_ssl_rsa_setup

-启动服务
bin/mysqld_safe --user=mysql &

-开机自启
cp support-files/mysql.server /etc/init.d/mysql
chmod +x /etc/init.d/mysql
chkconfig --add mysql

-查看
chkconfig mysql --list

-可能需要
chkconfig --level 345 mysql on

-登录
mysql -u root -p

-修改密码
alter user 'root'@'localhost' identified by '123';

-远程授权
rename user 'root'@'localhost' to 'root'@'%';





















