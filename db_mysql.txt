--开启binlog
  server-id = 1
  log-bin = bin-log
  binlog-format = Row

--查看binlog格式
show variables like 'binlog_format';
--查看指定binlog文件的内容
show binlog events in 'bin-log.000001';
mysqlbinlog --base64-output=decode-rows -v C:\mysql-5.7.13-winx64\data\bin-log.000004

--登录
mysql -uroot -proot

--为NULL字段设置默认值
SELECT IFNULL(NULL, 0);
SELECT COALESCE(NULL, 0);

--保留小数
SELECT ROUND(100.3465, 2), ROUND(100, 2), ROUND(0.6, 2), ROUND(114.6, -1); // 四舍五入
SELECT TRUNCATE(100.3465, 2), TRUNCATE(100, 2), TRUNCATE(0.6, 2), TRUNCATE(114.6, -1); // 舍

--数据类型转换
SELECT CAST(10 AS CHAR);
SELECT CAST(10 AS CHAR(1));
SELECT CAST('010' AS SIGNED);
SELECT CONVERT('010', SIGNED);

字符型，可带参数：CHAR()
日期：DATE
时间：TIME
日期时间型：DATETIME
浮点数：DECIMAL
有符号整数：SIGNED
无符号整数：UNSIGNED

--字符串转数字
SELECT '010.010' + 0;

--时间转字符串
SELECT DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s');
SELECT DATE_FORMAT(NOW(), '%Y-%c-%e %h:%i:%s');
SELECT DATE_FORMAT(NOW(6), '%Y-%m-%d %T.%f');
--字符串转时间
SELECT STR_TO_DATE('2018-01-18 18:18:18', '%Y-%m-%d %H:%i:%s');

--时间转时间戳
SELECT UNIX_TIMESTAMP(NOW());
--时间戳转时间
SELECT FROM_UNIXTIME(1539238971);

--年月日时分秒格式化成年月日
SELECT DATE(NOW());

SELECT NOW(); // 年月日时分秒
SELECT NOW(6); // 年月日时分秒毫秒
SELECT CURDATE(); // 年月日
SELECT CURTIME(); // 时分秒
SELECT CURTIME(6); // 时分秒毫秒

SELECT CURRENT_DATE(); // 年月日
SELECT CURRENT_TIME(); // 时分秒
SELECT CURRENT_TIME(6); // 时分秒毫秒
SELECT CURRENT_TIMESTAMP(); // 年月日时分秒
SELECT CURRENT_TIMESTAMP(6); // 年月日时分秒毫秒

--一年当中的第几天
SELECT DAYOFYEAR(CURDATE());
--一月当中的第几天
SELECT DAYOFMONTH(CURDATE());
--一周当中的第几天（周日第一天）
SELECT DAYOFWEEK(CURDATE());
--一周当中的索引位置（0=周一）
SELECT WEEKDAY(CURDATE());

--几几年
SELECT YEAR(NOW());
--几月
SELECT MONTH(NOW());
--几周
SELECT WEEK(NOW());
--几号
SELECT DAY(NOW());
--几时
SELECT HOUR(NOW());
--几分
SELECT MINUTE(NOW());
--几秒
SELECT SECOND(NOW());

--时间加减
SELECT DATE_ADD(CURDATE(), INTERVAL -1 DAY);
SELECT DATE_SUB(CURDATE(), INTERVAL -1 YEAR);

--当天0点
SELECT CURDATE();
--昨天0点
SELECT DATE_ADD(CURDATE(), INTERVAL -1 DAY);
--当周周一0点
SELECT DATE_ADD(CURDATE(), INTERVAL -WEEKDAY(CURDATE()) DAY);
--当月1号0点
SELECT DATE_ADD(CURDATE(), INTERVAL -DAY(CURDATE()) + 1 DAY);
--上月1号0点
SELECT DATE_ADD(CURDATE() - DAY(CURDATE()) + 1, INTERVAL -1 MONTH);
--下月1号0点
SELECT DATE_ADD(CURDATE() - DAY(CURDATE()) + 1, INTERVAL 1 MONTH);
--当月最后一天0点
SELECT lASt_DAY(CURDATE());
----当年1月1号0点
SELECT DATE_ADD(CURDATE(), INTERVAL -DAYOFYEAR(CURDATE()) + 1 DAY);
--去年1月1号0点
SELECT DATE_ADD(CURDATE() - DAYOFYEAR(CURDATE()) + 1, INTERVAL -1 YEAR);

--比较时分秒
SELECT TIMEDIFF('1993-07-22 08:08:08', '1993-07-20 06:06:06');
--比较天数
SELECT DATEDIFF('1993-07-22 06:06:06', '1993-07-20 08:08:08');
--比较时间
SELECT TIMESTAMPDIFF(YEAR, '1993-07-22 08:08:08', '1993-07-20 06:06:06');
SELECT TIMESTAMPDIFF(MONTH, '1993-07-22 08:08:08', '1993-07-20 06:06:06');
SELECT TIMESTAMPDIFF(DAY, '1993-07-22 08:08:08', '1993-07-20 06:06:06');
SELECT TIMESTAMPDIFF(HOUR, '1993-07-22 08:08:08', '1993-07-20 06:06:06');
SELECT TIMESTAMPDIFF(MINUTE, '1993-07-22 08:08:08', '1993-07-20 06:06:06');
SELECT TIMESTAMPDIFF(SECOND, '1993-07-22 08:08:08', '1993-07-20 06:06:06');

--字符串长度
--LENGTH()一个汉字三个字符，CHAR_LENGTH()一个汉字一个字符
SELECT LENGTH('吴彬');
SELECT CHAR_LENGTH('吴彬');

--字符串拼接
SELECT CONCAT('%', 'wubin', '%');

--取顺序第一个逗号前面的字符串
SELECT SUBSTRING_INDEX('123,456,789,0', ',', 1); //123
--取顺序第二个逗号前面的字符串
SELECT SUBSTRING_INDEX('123,456,789,0', ',', 2); //123,456
--取倒序第一个逗号后面的字符串
SELECT SUBSTRING_INDEX('123,456,789,0', ',', -1); //0

SELECT SUBSTRING_INDEX(SUBSTRING_INDEX('123,456,789,0', ',', 2), ',', -1); //456

SELECT FIND_IN_SET('b', 'a,b,c,d'); //2
SELECT FIND_IN_SET('e', 'a,b,c,d'); //0

--GROUP_CONCAT一般与GROUP BY同时使用
SELECT GROUP_CONCAT(id) FROM wubin;
SELECT name,GROUP_CONCAT(id) FROM wubin GROUP BY name;

--COUNT()函数有条件
SELECT COUNT(CASE WHEN charge_type = 2 THEN charge_type END) FROM chargerecord_8
SELECT COUNT(charge_type = 2 OR NULL) FROM chargerecord_8

--分组求最大值，并取最大值所在的行
SELECT a.* FROM wubin a
LEFT JOIN wubin b
ON a.name = b.name AND a.amount < b.amount
WHERE b.name IS NULL;

SELECT b.* FROM
(
SELECT name, MAX(amount) amount
FROM wubin
GROUP BY name
) a
LEFT JOIN wubin b
ON a.amount = b.amount AND a.name = b.name;

SELECT * FROM wubin
WHERE amount IN (
SELECT MAX(amount) FROM wubin
GROUP BY name
);

SELECT * FROM wubin a
WHERE amount = (
SELECT MAX(amount) FROM wubin b
WHERE a.name = b.name
);

--自连接
SELECT create_time, COUNT(*) c,
(
SELECT COUNT(*) 
FROM wubin b 
WHERE b.create_time <= a.create_time
) ltec
FROM wubin a
GROUP BY create_time;

--索引
--创建索引
CREATE INDEX index_username ON user(username);
ALTER TABLE user ADD INDEX index_username (username);
CREATE INDEX index_user ON user(username, create_time, age);

--删除索引
DROP INDEX index_username ON user;
ALTER TABLE user DROP INDEX index_username;

--索引字段名不要是关键字
--结果超过一半，索引无效

--IS NULL，索引有效；IS NOT NULL，索引无效
EXPLAIN SELECT * FROM user WHERE username IS NULL;
EXPLAIN SELECT * FROM user WHERE username IS NOT NULL;

--IN 小于等于两个，索引有效；大于两个，索引无效
EXPLAIN SELECT * FROM user WHERE username IN ('tom', 'mary');
EXPLAIN SELECT * FROM user WHERE username IN ('tom', 'mary', 'wubin');

--LIKE 以%开头，索引无效；不以%开头，索引有效
EXPLAIN SELECT * FROM user WHERE username LIKE '%t%';
EXPLAIN SELECT * FROM user WHERE username LIKE 't%';

--OR语句
EXPLAIN SELECT * FROM user WHERE age = 23 OR age = 24; //结果<=1，索引有效
EXPLAIN SELECT * FROM user WHERE age < 12 OR age > 12; //结果<=1，索引有效
EXPLAIN SELECT * FROM user WHERE username = 'tom' OR username = 'jack'; //结果<=1，索引有效
EXPLAIN SELECT * FROM user WHERE create_time = '2019-12-09 15:33:00' OR create_time = '2019-12-09 15:33:01'; //结果<=1，索引有效
EXPLAIN SELECT * FROM user WHERE create_time < '2019-12-09 10:07:08' OR create_time > '2020-02-04 10:47:50'; //结果<=1，索引有效
EXPLAIN SELECT * FROM user WHERE username = 'wubin' OR age = 54; //每个字段结果<=1，索引有效
EXPLAIN SELECT * FROM user WHERE username = 'wubin' OR realname = 'wer'; //每个字段结果<=1，索引有效

--<>，!=主键索引有效，非主键索引结果<=1，索引有效
EXPLAIN SELECT * FROM user WHERE id != 12;
EXPLAIN SELECT * FROM user WHERE age != 12; //结果<=1，索引有效

--数据类型隐式转化（不包括时间类型）
EXPLAIN SELECT * FROM user WHERE username = '123';
EXPLAIN SELECT * FROM user WHERE username = 123; //索引无效
EXPLAIN SELECT * FROM user WHERE username = CAST(123 AS char);

EXPLAIN SELECT * FROM user WHERE create_time = '2019-12-09 14:42:40'; //索引有效
EXPLAIN SELECT * FROM user WHERE create_time < '2019-12-09 14:42:40'; //索引有效
EXPLAIN SELECT * FROM user WHERE create_time < CAST('2019-12-09 14:42:40' AS DATETIME); //索引有效
EXPLAIN SELECT * FROM user WHERE create_time < STR_TO_DATE('2019-12-09 14:42:40', '%Y-%m-%d %H:%i:%s'); //索引有效

--对索引字段进行计算，索引无效
EXPLAIN SELECT * FROM user WHERE age - 1 = 1; //索引无效
EXPLAIN SELECT * FROM user WHERE age = 23 + 1; //索引有效

--对索引字段使用函数，索引无效
EXPLAIN SELECT * FROM user WHERE LENGTH(username) = 8;

--组合索引 最佳左前缀法则
EXPLAIN SELECT * FROM user WHERE username = 'tom';
EXPLAIN SELECT * FROM user WHERE create_time = '2019-12-09 14:42:40'; //索引无效
EXPLAIN SELECT * FROM user WHERE age = 12; //索引无效
EXPLAIN SELECT * FROM user WHERE username = 'tom' AND create_time = '2019-12-09 14:42:40';
EXPLAIN SELECT * FROM user WHERE create_time = '2019-12-09 14:42:40' AND username = 'tom';
EXPLAIN SELECT * FROM user WHERE username = 'tom' AND age = 12;
EXPLAIN SELECT * FROM user WHERE create_time = '2019-12-09 14:42:40' AND age = 12; //索引无效
EXPLAIN SELECT * FROM user WHERE username = 'tom' AND create_time = '2019-12-09 14:42:40' AND age = 12;
EXPLAIN SELECT * FROM user WHERE create_time = '2019-12-09 14:42:40' AND age = 12 AND username = 'tom';
EXPLAIN SELECT * FROM user WHERE username = 'tom' AND create_time < '2019-12-09 14:42:40' AND age = 12; //范围条件后的索引失效

--创建临时表
CREATE TEMPORARY TABLE IF NOT EXISTS incre_table (auto_incre_id INT);

--根据某个字段把一条记录分成多条
SELECT SUBSTRING_INDEX(SUBSTRING_INDEX('82,83,84,85,86', ',', auto_incre_id), ',', -1) AS id FROM 
(
SELECT 1 auto_incre_id
UNION ALL SELECT 2 auto_incre_id
UNION ALL SELECT 3 auto_incre_id
) a
WHERE auto_incre_id <= (LENGTH('82,83,84,85,86') - LENGTH(REPLACE('82,83,84,85,86', ',', '')) + 1);

--一张表数据插入另一张表
INSERT INTO tb_user_copy1(id, username, password, create_time)
SELECT id, username, password, create_time FROM tb_user
WHERE id > 80

--前10条记录中，每隔5条取1条
SELECT * FROM
(
SELECT *, @rownum := @rownum + 1 AS rowno FROM tb_user, (SELECT @rownum := 0) t
ORDER BY id DESC LIMIT 0, 10
) a 
WHERE MOD(a.rowno, 5) = 1











































