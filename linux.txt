--虚拟机
-下载地址
https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.0-14665864.exe
https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.7-17171714.exe
-激活码
UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA
VF750-4MX5Q-488DQ-9WZE9-ZY2D6
UU54R-FVD91-488PP-7NNGC-ZFAX6
YC74H-FGF92-081VZ-R5QNG-P6RY4
YC34H-6WWDK-085MQ-JYPNX-NZRA2
-镜像下载
https://mirrors.aliyun.com/centos
https://mirrors.aliyun.com/centos/7.8.2003/isos/x86_64/


--工具
PuTTY	https://www.chiark.greenend.org.uk/~sgtatham/putty/
WinSCP	https://winscp.net/eng/docs/lang:chs
FileZilla	https://www.filezilla.cn/
FinalShell	http://www.hostbuf.com/


--上传文件
psftp
open 192.168.10.114
put D:/tools/nginx-1.16.1.tar.gz /usr/local/nginx-1.16.1.tar.gz
或
pscp -P 22 -pw 123 D:\tools\linux\centos8\mysql-5.7.30-linux-glibc2.12-x86_64.tar.gz root@192.168.10.131:/usr/local


--基本指令
-版本
cat /etc/redhat-release
cat /proc/version
-进程
ps -aux
ps -aux | grep XX
ps -e | grep XX
-
netstat -lnp | grep 8080
kill -9
nohup java -jar XX.jar &
-重启
reboot

find / -name nginx.conf
mkdir test
rm -rf test

-cpu
lscpu
cat /proc/cpuinfo | grep "core id" | sort | uniq | wc -l
cat /proc/cpuinfo | grep "cores" | uniq

-运行内存
free -h
cat /proc/meminfo

-硬盘
lsblk
df -h

-设置网络
vi /etc/sysconfig/network-scripts/ifcfg-ens33
ONBOOT=yes
i
esc
:wq
service network restart
ip addr

-DNS配置
vi /etc/sysconfig/network-scripts/ifcfg-ens1
DNS1=223.5.5.5
或
vi /etc/resolv.conf
nameserver 114.114.114.114


--rpm
-网站
http://mirrors.aliyun.com/centos/7/os/x86_64/Packages/
http://vault.centos.org/
http://rpm.pbone.net/
-安装
rpm -ivh nginx-1.16.1-1.el7.ngx.x86_64.rpm
-升级
rpm -Uvh *.rpm
-卸载
rpm -e nginx-1.16.1-1.el7.ngx.x86_64
-是否安装
rpm -q nginx
-所有安装
rpm -qa | grep nginx
-详细信息
rpm -qi nginx


--yum
-更换镜像
https://developer.aliyun.com/mirror/centos
1.备份
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
2.下载新的 CentOS-Base.repo 到 /etc/yum.repos.d/
curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
3.生成缓存
yum makecache

-指令
-查看当前可用yum源
yum repolist
-
yum search nginx
-
yum info
yum info extras
yum info updates
yum info installed
yum info nginx
-
yum list
yum list extras
yum list updates
yum list installed
yum list installed | grep nginx
yum list nginx

-安装，-y表示不询问安装
yum install net-tools -y
ifconfig

-卸载
yum remove net-tools


--服务
service -help
service [服务] start
service [服务] stop
service [服务] restart
service [服务] reload
service [服务] status

chkconfig --help
-添加
chkconfig --add XX
-开机启动
chkconfig [服务] on
chkconfig [服务] off

-是否开机启动，2、3、4、5启动，代表开机启动
chkconfig --list
chkconfig XX --list

-
systemctl start [unit type]
systemctl stop [unit type]
systemctl restart [unit type]
systemctl reload [unit type]
systemctl status [unit type]

-是否启动
systemctl is-active [unit type]

-重新加载所有服务的配置文件
systemctl daemon-reload

-开机启动
systemctl enable [unit type]
systemctl disable [unit type]

-是否开机启动
systemctl is-enabled [unit type]

-启动的unit
systemctl list-units | grep sshd
-所有的unit
systemctl list-units --all | grep sshd
-所有的unit-file
systemctl list-unit-files | grep sshd


--防火墙
service firewalld status
service firewalld start

firewall-cmd --list-all
-查看端口是否开放
firewall-cmd --query-port=80/tcp
-开放端口，需要重启防火墙
firewall-cmd --permanent --add-port=80/tcp
-重启防火墙
firewall-cmd --reload
-移除端口
firewall-cmd --permanent --remove-port=8080/tcp


--新建用户并设为ROOT权限
adduser cyy
passwd cyy
qwe123!@#
qwe123!@#
visudo或vi /etc/sudoers
cyy    ALL=(ALL)     ALL

-添加用户组
groupadd test
-查看用户组
cat /etc/group
-删除用户组
groupdel test
-添加用户
useradd -r -g test test
-修改密码
passwd test
-查看用户
cat /etc/passwd
-删除用户，包括/home目录
userdel -r test


--同步时间
yum install ntp
timedatectl set-timezone Asia/Shanghai
timedatectl set-ntp yes
timedatectl
date

rpm -ivh ntpdate-4.2.6p5-29.el7.centos.2.x86_64.rpm
ntpdate 172.16.10.55
timedatectl set-timezone Asia/Shanghai
hwclock -w


--
-口令周期检测
vi /etc/login.defs
PASS_MAX_DAYS   90
PASS_MIN_DAYS   7
PASS_MIN_LEN    8
PASS_WARN_AGE   7

-登录锁定检测
vi /etc/pam.d/sshd
vi /etc/pam.d/login
auth       required     pam_tally2.so deny=5 unlock_time=300

vi /etc/profile
export TMOUT=300

-SSH检测
vi /etc/ssh/sshd_config
PermitRootLogin no


--rabbitmq安装
-packagecloud安装
curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | sudo bash
curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | sudo bash
yum -y install erlang
yum -y install rabbitmq-server

chkconfig rabbitmq-server on
service rabbitmq-server status
service rabbitmq-server start

rabbitmq-plugins enable rabbitmq_management
15672

rabbitmqctl add_user admin 123456
rabbitmqctl set_user_tags admin administrator

rabbitmqctl status
rabbitmqctl list_users
rabbitmqctl delete_user username
rabbitmqctl oldPassword username newPassword

-rpm安装
cd /usr/local
wget https://github.com/rabbitmq/erlang-rpm/releases/download/v22.3.4.5/erlang-22.3.4.5-1.el7.x86_64.rpm
wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.8.6/rabbitmq-server-3.8.6-1.el7.noarch.rpm


--docker安装
https://docs.docker.com/engine/install/centos/
https://developer.aliyun.com/mirror/docker-ce?spm=a2c6h.13651102.0.0.567f1b11jFpvr0
-yum安装
1.
yum install -y yum-utils
2.
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
3.
yum install docker-ce docker-ce-cli containerd.io

-脚本安装
curl -fsSL https://get.docker.com | sh
curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
curl -sSL https://get.daocloud.io/docker | sh

docker version
systemctl start docker

-修改配置文件
vi /etc/docker/daemon.json
{
  "registry-mirrors": ["https://registry.docker-cn.com"]
}

-重新加载配置文件
systemctl daemon-reload
systemctl restart docker

-测试
docker pull hello-world
docker run hello-world

-搜索镜像
docker search onlyoffice/documentserver
-拉取镜像
docker pull onlyoffice/documentserver
-查看镜像
docker images
-删除镜像
docker rmi 镜像id
docker rmi hello-world
docker rmi hello-world:latest
-删除所有镜像
docker rmi $(docker images -q)

-查看运行容器
docker ps
-查看所有容器
docker ps -a
-删除容器
docker rm 容器id
-停用容器
docker stop 容器id
-删除所有容器
docker rm $(docker ps -a -q)
-停止所有容器
docker stop $(docker ps -a -q)

-onlyoffice
-拉取
docker pull onlyoffice/documentserver

-运行
sudo docker run -i -t -d -p 8070:80 --restart=always \
    -v /app/onlyoffice/DocumentServer/logs:/var/log/onlyoffice  \
    -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data  \
    -v /app/onlyoffice/DocumentServer/lib:/var/lib/onlyoffice \
    -v /app/onlyoffice/DocumentServer/db:/var/lib/postgresql -e JWT_SECRET=my_jwt_secret onlyoffice/documentserver

docker restart b7bc7ba574df
docker stop dfa28e336ddb

-访问
http://localhost:8070
http://cro.zpsoftware.cn:8070
http://cro2.zpsoftware.cn:8070
http://cro2.zpsoftware.cn:8070/web-apps/apps/api/documents/api.js

-字体
docker ps
docker exec -i -t 6e2c95f4ec76 /bin/bash
cd /usr/share/fonts/
rm -rf *
cd /var/www/onlyoffice/documentserver/core-fonts/
rm -rf *
Ctrl+D退出容器

docker cp /www/fonts 6e2c95f4ec76:/usr/share/fonts/truetype/custom
docker exec -i -t 6e2c95f4ec76 /bin/bash
fc-cache -f -v
/usr/bin/documentserver-generate-allfonts.sh
supervisorctl restart all
Ctrl+D退出容器

docker cp 7aba08f74120:/usr/share/fonts /www/fonts
docker cp 7aba08f74120:/var/www/onlyoffice/documentserver/core-fonts /www/core-fonts

-docker安装oracle
docker search oracle
docker pull truevoly/oracle-12c
docker run -d -p 1521:1521 --name oracle12c truevoly/oracle-12c
docker exec -it oracle12c /bin/bash
-登录
su oracle
$ORACLE_HOME/bin/sqlplus / as sysdba
$ORACLE_HOME/bin/sqlplus /nolog
conn / as sysdba
-开启日志归档
select log_mode from v$database;
archive log list
shutdown immediate;
-
startup mount;
-
alter database archivelog;
alter database noarchivelog;
archive log list
-
show parameter DB_RECOVERY_FILE_DEST
alter system set log_archive_dest_1 = 'location=/data/oracle/rcas/RCAS/archivelog';
alter system set db_recovery_file_dest = '/opt/oracle/oradata/recovery_area' scope = spfile;
-
alter database open;
-用户
create user test identified by "123";
grant dba to test;
-远程连接
用户名: system
密码: oracle
服务名: xe
SID: xe 

-spring boot docker部署
-Dockerfile
FROM java:8
EXPOSE 8080
RUN
VOLUME
-ADD/COPY 将外部文件copy到容器中。区别是ADD可以使用URL，还可以是tar；COPY只能使用dockerfile所在目录
ADD target/tomcat-release.war /usr/local/tomcat/webapps/
COPY target/tomcat-release.war /usr/local/tomcat/webapps/
ENTRYPOINT ["java", "-jar", "demo.jar"]
CMD ["java", "-jar", "demo.jar"]

docker build -t docker-demo .
docker run -p 8080:8080 docker-demo


























