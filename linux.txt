--工具
FinalShell http://www.hostbuf.com/


--上传nginx-1.16.1.tar.gz
psftp
open 192.168.10.114
put D:/tools/nginx-1.16.1.tar.gz /usr/local/nginx-1.16.1.tar.gz
或
pscp -P 22 -pw 123 D:\tools\linux\centos8\mysql-5.7.30-linux-glibc2.12-x86_64.tar.gz root@192.168.10.131:/usr/local


--虚拟机
-下载地址
https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.0-14665864.exe
https://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.5.7-17171714.exe
-激活码
UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA
VF750-4MX5Q-488DQ-9WZE9-ZY2D6
UU54R-FVD91-488PP-7NNGC-ZFAX6
YC74H-FGF92-081VZ-R5QNG-P6RY4
YC34H-6WWDK-085MQ-JYPNX-NZRA2
-镜像下载
https://mirrors.aliyun.com/centos
https://mirrors.aliyun.com/centos/7.8.2003/isos/x86_64/


--网站
http://mirrors.aliyun.com/centos/7/os/x86_64/Packages/
http://vault.centos.org/
http://rpm.pbone.net/


--基本指令
cat /proc/version
uname -a
cat /etc/redhat-release
cat /etc/issue

reboot
mkdir test
rm -rf test
ps -e | grep XX
ps -aux | grep XX
netstat -lnp | grep 8080
kill -9 port
find / -name nginx.conf
vi /etc/profile
nohup java -jar XX.jar &


--网络
vi /etc/sysconfig/network-scripts/ifcfg-ens33
ONBOOT=yes
service network restart
ip addr


--rpm
-安装
rpm -ivh nginx-1.16.1-1.el7.ngx.x86_64.rpm
-升级
rpm -Uvh *.rpm
-卸载
rpm -e nginx-1.16.1-1.el7.ngx.x86_64.rpm
-是否安装
rpm -q nginx
-所有安装
rpm -qa | grep nginx
-详细信息
rpm -qi nginx


--yum
-更换镜像
https://developer.aliyun.com/mirror/centos
-备份
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
-下载新的 CentOS-Base.repo 到 /etc/yum.repos.d/
curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
-生成缓存
yum makecache

-指令
yum repolist
yum search nginx
yum list nginx
yum info nginx
yum list extras
yum list installed | grep nginx

-安装，-y表示不询问安装
yum -y install net-tools
ifconfig

-卸载
yum remove net-tools


--服务
-
service -help
service [服务] start
service [服务] stop
service [服务] restart
service [服务] reload
service [服务] status

chkconfig --help
-添加
chkconfig --add XX
-开机启动
chkconfig [服务] on
chkconfig [服务] off

-是否开机启动，2、3、4、5启动，代表开机启动
chkconfig --list
chkconfig XX --list

-
systemctl start [unit type]
systemctl stop [unit type]
systemctl restart [unit type]
systemctl reload [unit type]
systemctl status [unit type]

-是否启动
systemctl is-active [unit type]

-重新加载所有服务的配置文件
systemctl daemon-reload

-开机启动
systemctl enable [unit type]
systemctl disable [unit type]

-是否开机启动
systemctl is-enabled [unit type]

-启动的unit
systemctl list-units | grep sshd
-所有的unit
systemctl list-units --all | grep sshd
-所有的unit-file
systemctl list-unit-files | grep sshd


--防火墙
service firewalld start

firewall-cmd --list-all
-查看端口是否开放
firewall-cmd --query-port=80/tcp
-开放端口，需要重启防火墙
firewall-cmd --permanent --add-port=80/tcp
-重启防火墙
firewall-cmd --reload
-移除端口
firewall-cmd --permanent --remove-port=8080/tcp


--java安装
cd /usr/local
rpm -ivh jdk-8u261-linux-x64.rpm
java -version


--nginx yum安装
yum install yum-utils
vi /etc/yum.repos.d/nginx.repo
############################
[nginx-stable]
name=nginx stable repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=1
enabled=1
gpgkey=https://nginx.org/keys/nginx_signing.key
module_hotfixes=true

[nginx-mainline]
name=nginx mainline repo
baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/
gpgcheck=1
enabled=0
gpgkey=https://nginx.org/keys/nginx_signing.key
module_hotfixes=true
############################
yum install nginx

nginx -v
ps -aux | grep nginx
nginx
nginx -s reload
nginx -s quit

-应用程序
/usr/sbin/nginx
-配置文件
/etc/nginx/nginx.conf
/etc/nginx/conf.d
-默认首页
/usr/share/nginx/html

-
/etc/sysconfig/nginx
/etc/logrotate.d/nginx
/etc/nginx
/var/log/nginx
/var/cache/nginx
/usr/sbin/nginx
/usr/lib64/nginx
/usr/share/nginx
/usr/libexec/initscripts/legacy-actions/nginx

--nginx rpm安装
cd /usr/local
wget http://nginx.org/packages/centos/7/x86_64/RPMS/nginx-1.16.1-1.el7.ngx.x86_64.rpm
rpm -ivh nginx-1.16.1-1.el7.ngx.x86_64.rpm

--nginx源码安装
yum -y install gcc gcc-c++
cpp-4.8.5-39.el7.x86_64.rpm
gcc-c++-4.8.5-39.el7.x86_64.rpm
glibc-devel-2.17-307.el7.1.x86_64.rpm
glibc-headers-2.17-307.el7.1.x86_64.rpm
libmpc-1.0.1-3.el7.x86_64.rpm
libstdc++-devel-4.8.5-39.el7.x86_64.rpm
mpfr-3.1.1-4.el7.x86_64.rpm
gcc-4.8.5-39.el7.x86_64.rpm
kernel-headers-3.10.0-1127.18.2.el7.x86_64.rpm

yum -y install pcre pcre-devel
pcre-devel-8.32-17.el7.x86_64.rpm

yum -y install zlib zlib-devel
zlib-devel-1.2.7-18.el7.x86_64.rpm

yum -y install openssl openssl-devel
keyutils-libs-devel-1.5.8-3.el7.x86_64.rpm
libcom_err-devel-1.42.9-17.el7.x86_64.rpm
krb5-devel-1.15.1-46.el7.x86_64.rpm
libkadm5-1.15.1-46.el7.x86_64.rpm
libsepol-devel-2.5-10.el7.x86_64.rpm
libverto-devel-0.2.5-4.el7.x86_64.rpm
openssl-devel-1.0.2k-19.el7.x86_64.rpm
libselinux-devel-2.5-15.el7.x86_64.rpm

cd /usr/local
wget http://nginx.org/download/nginx-1.16.1.tar.gz
tar -zxvf nginx-1.16.1.tar.gz
cd nginx-1.16.1
#./configure --prefix=/usr/local/nginx
./configure && make
cd /usr/local/nginx/sbin
./nginx -c /usr/local/nginx/conf/nginx.conf
./nginx -s reload
./nginx -s quit

-开机启动
vi /usr/lib/systemd/system/nginx.service
或
vi /lib/systemd/system/nginx.service
############################
[Unit]
Description=nginx
After=network.target
  
[Service]
Type=forking
ExecStart=/usr/local/nginx/sbin/nginx
ExecReload=/usr/local/nginx/sbin/nginx -s reload
ExecStop=/usr/local/nginx/sbin/nginx -s quit
PrivateTmp=true
  
[Install]
WantedBy=multi-user.target
############################
systemctl enable nginx.service


--redis安装
cd /usr/local
wget http://download.redis.io/releases/redis-4.0.9.tar.gz
tar xzf redis-4.0.9.tar.gz
cd redis-4.0.9
make
-修改redis.conf
vi redis.conf
-修改端口port
-后台启动daemonize no 改成 daemonize yes
-注释掉bind 127.0.0.1
-设置密码requirepass 123456
-启动redis
src/redis-server /usr/local/redis-4.0.9/redis.conf
-关闭redis
ps -aux | grep redis
kill -9 port

-开机启动
vi /lib/systemd/system/redis.service
############################
[Unit]
Description=redis
After=network.target
  
[Service]
Type=forking
ExecStart=/usr/local/redis-4.0.9/src/redis-server /usr/local/redis-4.0.9/redis.conf
PrivateTmp=true
  
[Install]
WantedBy=multi-user.target
############################
systemctl enable redis.service


--mysql安装
https://repo.mysql.com/
-卸载自带的mariadb
rpm -qa | grep mariadb
rpm -e --nodeps mariadb-libs-5.5.65-1.el7.x86_64

-添加用户组
groupadd test
-查看用户组
cat /etc/group
-删除用户组
groupdel test
-添加用户
useradd -r -g test test
-修改密码
passwd test
-查看用户
cat /etc/passwd
-删除用户，包括/home目录
userdel -r test

-
groupadd mysql
useradd -r -g mysql -s /bin/false mysql
-
cd /usr/local
tar zxvf mysql-5.7.30-linux-glibc2.12-x86_64.tar.gz
ln -s /usr/local/mysql-5.7.30-linux-glibc2.12-x86_64 mysql
export PATH=$PATH:/usr/local/mysql/bin
-
cd mysql
mkdir mysql-files
chown mysql:mysql mysql-files
chmod 750 mysql-files
-初始化
bin/mysqld --initialize --user=mysql
bin/mysqld --defaults-file=/etc/my.cnf --initialize --user=mysql
-创建默认的SSL和RSA文件，如需要
bin/mysql_ssl_rsa_setup
-启动
bin/mysqld_safe --user=mysql &
-开机自启
cp support-files/mysql.server /etc/init.d/mysql
chmod +x /etc/init.d/mysql
chkconfig --add mysql
-查看
chkconfig mysql --list
-可能需要
chkconfig --level 345 mysql on
-报错：mysql: error while loading shared libraries: libncurses.so.5: cannot open shared object file: No such file or directory
ln -s libncurses.so.5.6 /lib64/libtinfo.so.5
ln -s libncurses.so.5.6 /lib/libtinfo.so.5
yum install libncurses*
-登录
mysql -u root -p
-修改密码
alter user 'root'@'localhost' identified by '123';
-开放端口，远程授权
rename user 'root'@'localhost' to 'root'@'%';

-
cd /usr/local
wget https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.20-1.el7.x86_64.rpm-bundle.tar
mkdir mysql-8.0.20
tar -xvf mysql-8.0.20-1.el7.x86_64.rpm-bundle.tar -C mysql-8.0.20
cd mysql-8.0.20
-查看
rpm -qpl mysql-community-server-8.0.20-1.el7.x86_64.rpm
-安装
yum install mysql-community-{server,client,common,libs}-*
-启动服务
systemctl start mysqld
-查看服务
systemctl status mysqld
-查看密码
grep 'temporary password' /var/log/mysqld.log
-登录
mysql -u root -p
-修改密码
alter user 'root'@'localhost' identified by 'Wubin930722#';
caching_sha2_password
mysql_native_password
-开放端口，远程授权
rename user 'root'@'localhost' to 'root'@'%';
或
show databases;
use mysql;
select host, user, plugin from user;
update user set host = '%' where user='root';
flush privileges;

-修改配置文件
cat /etc/my.cnf
vi /etc/my.cnf
port=13306
-修改端口需要
vi /etc/selinux/config
SELINUX=disabled


--rabbitmq packagecloud安装
curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | sudo bash
curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | sudo bash
yum -y install erlang
yum -y install rabbitmq-server

chkconfig rabbitmq-server on
service rabbitmq-server status
service rabbitmq-server start

rabbitmq-plugins enable rabbitmq_management
15672

rabbitmqctl add_user admin 123456
rabbitmqctl set_user_tags admin administrator

rabbitmqctl status
rabbitmqctl list_users
rabbitmqctl delete_user username
rabbitmqctl oldPassword username newPassword

--rabbitmq rpm安装
cd /usr/local
wget https://github.com/rabbitmq/erlang-rpm/releases/download/v22.3.4.5/erlang-22.3.4.5-1.el7.x86_64.rpm
wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.8.6/rabbitmq-server-3.8.6-1.el7.noarch.rpm


--docker安装
-脚本安装
curl -fsSL https://get.docker.com | sh
curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
curl -sSL https://get.daocloud.io/docker | sh
-yum安装
yum -y install docker

-查看docker版本
docker version

systemctl enable docker.service
systemctl status docker.service
service docker start

-国内镜像
https://registry.docker-cn.com
https://docker.mirrors.ustc.edu.cn
https://hub-mirror.c.163.com
https://{your_id}.mirror.aliyuncs.com
http://{your_id}.m.daocloud.io
curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://{your_id}.m.daocloud.io

-修改配置文件
vi /etc/docker/daemon.json
{"registry-mirrors": ["https://docker.mirrors.ustc.edu.cn"]}

-重新加载配置文件
systemctl reload docker.service
systemctl daemon-reload

-测试
docker pull hello-world
docker run hello-world

docker pull hub.c.163.com/library/tomcat:latest

docker search mysql

-查看镜像
docker images
-删除镜像
docker rmi 镜像id
docker rmi hello-world
docker rmi hello-world:latest
-删除所有镜像
docker rmi $(docker images -q)

-查看运行的容器
docker ps
-查看已退出的容器
docker ps -a
-删除容器
docker rm 容器id
-停用容器
docker stop 容器id
-删除所有容器
docker rm $(docker ps -a -q)
-停止所有容器
docker stop $(docker ps -a -q)

-spring boot docker部署
-Dockerfile
FROM java:8
EXPOSE 8080
RUN
VOLUME
-ADD/COPY 将外部文件copy到容器中。区别是ADD可以使用URL，还可以是tar；COPY只能使用dockerfile所在目录
ADD target/tomcat-release.war /usr/local/tomcat/webapps/
COPY target/tomcat-release.war /usr/local/tomcat/webapps/
ENTRYPOINT ["java", "-jar", "demo.jar"]
CMD ["java", "-jar", "demo.jar"]

docker build -t docker-demo .
docker run -p 8080:8080 docker-demo
































