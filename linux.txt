--工具
FinalShell http://www.hostbuf.com/


-上传nginx-1.16.1.tar.gz
psftp
open 192.168.10.114
put D:/tools/nginx-1.16.1.tar.gz /usr/local/tools/nginx-1.16.1.tar.gz
或
pscp D:\tools\nginx-1.16.1.tar.gz root@192.168.10.114:/usr/local/tools


--指令
reboot
mkdir tools
rm -rf tools
ps -e | grep XX
ps -aux | grep XX


--服务
-启动
service [服务] start
service [服务] stop
service [服务] restart
service [服务] status

systemctl start [unit type]
systemctl stop [unit type]
systemctl restart [unit type]
systemctl status [unit type]

-开机启动
chkconfig [服务] on
chkconfig [服务] off

systemctl enable [unit type]
systemctl disable [unit type]

-是否启动
systemctl is-active [unit type]
-是否开机启动
systemctl is-enabled [unit type]

-重新加载某个服务的配置文件
systemctl reload [unit type]
-重新加载所有服务的配置文件
systemctl daemon-reload

systemctl list-units | grep sshd
systemctl list-units --all | grep sshd
systemctl list-unit-files | grep sshd


--防火墙
systemctl status firewalld.service
service firewalld start

firewall-cmd --list-all
-查看端口是否开放
firewall-cmd --query-port=80/tcp
-开放端口
firewall-cmd --permanent --add-port=80/tcp
-移除端口
firewall-cmd --permanent --remove-port=8080/tcp
-重启防火墙
firewall-cmd --reload


--centos7 yum 更换源
-备份
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
-下载新的 CentOS-Base.repo 到 /etc/yum.repos.d/
curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
-生成缓存
yum clean all && yum makecache
yum repolist

-yum查看是否已安装
yum list installed | grep openssh-server


--wget安装，-y表示不询问安装
yum -y install wget


--ifconfig安装
yum -y install net-tools
ifconfig


--ssh安装
yum -y install openssh-server

ps -aux | grep sshd
systemctl status sshd.service
service sshd start


--nginx epel安装
rpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
或
cd /usr/local/tools
wget http://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-12.noarch.rpm
rpm -ivh epel-release-7-12.noarch.rpm
yum clean all && yum makecache
yum repolist

yum -y install epel-release
yum -y install nginx

--nginx rpm安装
cd /usr/local/tools
wget http://nginx.org/packages/centos/7/x86_64/RPMS/nginx-1.16.1-1.el7.ngx.x86_64.rpm
rpm -ivh nginx-1.16.1-1.el7.ngx.x86_64.rpm
yum info nginx
yum search nginx
yum -y install nginx
/etc/nginx/nginx.conf
/etc/nginx/conf.d

--nginx源码安装
yum -y install gcc gcc-c++
cpp-4.8.5-39.el7.x86_64.rpm
gcc-c++-4.8.5-39.el7.x86_64.rpm
glibc-devel-2.17-307.el7.1.x86_64.rpm
glibc-headers-2.17-307.el7.1.x86_64.rpm
libmpc-1.0.1-3.el7.x86_64.rpm
libstdc++-devel-4.8.5-39.el7.x86_64.rpm
mpfr-3.1.1-4.el7.x86_64.rpm
gcc-4.8.5-39.el7.x86_64.rpm
kernel-headers-3.10.0-1127.18.2.el7.x86_64.rpm

yum -y install pcre pcre-devel
pcre-devel-8.32-17.el7.x86_64.rpm

yum -y install zlib zlib-devel
zlib-devel-1.2.7-18.el7.x86_64.rpm

yum -y install openssl openssl-devel
keyutils-libs-devel-1.5.8-3.el7.x86_64.rpm
libcom_err-devel-1.42.9-17.el7.x86_64.rpm
krb5-devel-1.15.1-46.el7.x86_64.rpm
libkadm5-1.15.1-46.el7.x86_64.rpm
libsepol-devel-2.5-10.el7.x86_64.rpm
libverto-devel-0.2.5-4.el7.x86_64.rpm
openssl-devel-1.0.2k-19.el7.x86_64.rpm
libselinux-devel-2.5-15.el7.x86_64.rpm

http://vault.centos.org/
http://rpm.pbone.net/
rpm -Uvh *.rpm --nodeps --force

cd /usr/local/tools
wget http://nginx.org/download/nginx-1.16.1.tar.gz
tar -zxvf nginx-1.16.1.tar.gz
cd nginx-1.16.1
#./configure --prefix=/usr/local/nginx
./configure && make && make install
cd /usr/local/nginx/sbin
./nginx -c /usr/local/nginx/conf/nginx.conf
./nginx -s reload
./nginx -s quit

-开机启动
vi /usr/lib/systemd/system/nginx.service
或
vi /lib/systemd/system/nginx.service
############################
[Unit]
Description=nginx
After=network.target
  
[Service]
Type=forking
ExecStart=/usr/local/nginx/sbin/nginx
ExecReload=/usr/local/nginx/sbin/nginx -s reload
ExecStop=/usr/local/nginx/sbin/nginx -s quit
PrivateTmp=true
  
[Install]
WantedBy=multi-user.target
############################
systemctl enable nginx.service


--redis安装
cd /usr/local/tools
wget http://download.redis.io/releases/redis-4.0.9.tar.gz
tar -zxvf redis-4.0.9.tar.gz
cd redis-4.0.9
make
-修改redis.conf
vi redis.conf
-修改端口port
-后台启动daemonize no 改成 daemonize yes
-注释掉bind 127.0.0.1
-设置密码requirepass 123456
-启动redis
src/redis-server /usr/local/tools/redis-4.0.9/redis.conf
-关闭redis
ps -aux | grep redis
kill -9 port


--rabbitmq packagecloud安装
curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | sudo bash
curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | sudo bash
yum -y install erlang
yum -y install rabbitmq-server

chkconfig rabbitmq-server on
systemctl status rabbitmq-server.service
service rabbitmq-server start

rabbitmq-plugins enable rabbitmq_management
15672

rabbitmqctl add_user admin 123456
rabbitmqctl set_user_tags admin administrator

rabbitmqctl status
rabbitmqctl list_users
rabbitmqctl delete_user username
rabbitmqctl oldPassword username newPassword

--rabbitmq rpm安装
cd /usr/local/tools
wget https://github.com/rabbitmq/erlang-rpm/releases/download/v22.3.4.5/erlang-22.3.4.5-1.el7.x86_64.rpm
wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.8.6/rabbitmq-server-3.8.6-1.el7.noarch.rpm


--docker安装
-脚本安装
curl -fsSL https://get.docker.com | sh
curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
curl -sSL https://get.daocloud.io/docker | sh
-yum安装
yum -y install docker

-查看docker版本
docker version

systemctl enable docker.service
systemctl status docker.service
service docker start

-国内镜像
https://registry.docker-cn.com
https://docker.mirrors.ustc.edu.cn
https://hub-mirror.c.163.com
https://{your_id}.mirror.aliyuncs.com
http://{your_id}.m.daocloud.io
curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://{your_id}.m.daocloud.io

-修改配置文件
vi /etc/docker/daemon.json
{"registry-mirrors": ["https://docker.mirrors.ustc.edu.cn"]}

-重新加载配置文件
systemctl reload docker.service
systemctl daemon-reload

-测试
docker pull hello-world
docker run hello-world

docker pull hub.c.163.com/library/tomcat:latest

docker search mysql

-查看镜像
docker images
-删除镜像
docker rmi 镜像id
docker rmi hello-world
docker rmi hello-world:latest
-删除所有镜像
docker rmi $(docker images -q)

-查看运行的容器
docker ps
-查看已退出的容器
docker ps -a
-删除容器
docker rm 容器id
-停用容器
docker stop 容器id
-删除所有容器
docker rm $(docker ps -a -q)
-停止所有容器
docker stop $(docker ps -a -q)

-spring boot docker部署
-Dockerfile
FROM java:8
EXPOSE 8080
RUN
VOLUME
-ADD/COPY 将外部文件copy到容器中。区别是ADD可以使用URL，还可以是tar；COPY只能使用dockerfile所在目录
ADD target/tomcat-release.war /usr/local/tomcat/webapps/
COPY target/tomcat-release.war /usr/local/tomcat/webapps/
ENTRYPOINT ["java", "-jar", "demo.jar"]
CMD ["java", "-jar", "demo.jar"]

docker build -t docker-demo .
docker run -p 8080:8080 docker-demo
































